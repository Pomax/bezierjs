{"version":3,"file":"bezier.js","sources":["../src/utils.js","../src/PolyBezier.js","../src/normalise-svg.js","../src/svg-to-beziers.js","../src/Bezier.js"],"sourcesContent":["import { Bezier } from './Bezier';\n\n// math-inlining.\nconst abs = Math.abs;\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst acos = Math.acos;\nconst atan2 = Math.atan2;\nconst sqrt = Math.sqrt;\nconst pow = Math.pow;\n// cube root function yielding real roots\nconst crt = function (v) {\n  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n};\n// trig constants\nconst pi = Math.PI;\nconst tau = 2 * pi;\nconst quart = pi / 2;\n// float precision significant decimal\nconst epsilon = 0.000001;\n// extremas used in bbox calculation and similar algorithms\nconst nMax = Number.MAX_SAFE_INTEGER || 9007199254740991;\nconst nMin = Number.MIN_SAFE_INTEGER || -9007199254740991;\n// a zero coordinate, which is surprisingly useful\nconst ZERO = { x: 0, y: 0, z: 0 };\n\n/**\n * @ignore\n */\n// Bezier utility functions\nconst utils = {\n  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n  Tvalues: [\n    -0.0640568928626056260850430826247450385909,\n    0.0640568928626056260850430826247450385909,\n    -0.1911188674736163091586398207570696318404,\n    0.1911188674736163091586398207570696318404,\n    -0.3150426796961633743867932913198102407864,\n    0.3150426796961633743867932913198102407864,\n    -0.4337935076260451384870842319133497124524,\n    0.4337935076260451384870842319133497124524,\n    -0.5454214713888395356583756172183723700107,\n    0.5454214713888395356583756172183723700107,\n    -0.6480936519369755692524957869107476266696,\n    0.6480936519369755692524957869107476266696,\n    -0.7401241915785543642438281030999784255232,\n    0.7401241915785543642438281030999784255232,\n    -0.8200019859739029219539498726697452080761,\n    0.8200019859739029219539498726697452080761,\n    -0.8864155270044010342131543419821967550873,\n    0.8864155270044010342131543419821967550873,\n    -0.9382745520027327585236490017087214496548,\n    0.9382745520027327585236490017087214496548,\n    -0.9747285559713094981983919930081690617411,\n    0.9747285559713094981983919930081690617411,\n    -0.9951872199970213601799974097007368118745,\n    0.9951872199970213601799974097007368118745\n  ],\n\n  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n  Cvalues: [\n    0.1279381953467521569740561652246953718517,\n    0.1279381953467521569740561652246953718517,\n    0.1258374563468282961213753825111836887264,\n    0.1258374563468282961213753825111836887264,\n    0.121670472927803391204463153476262425607,\n    0.121670472927803391204463153476262425607,\n    0.1155056680537256013533444839067835598622,\n    0.1155056680537256013533444839067835598622,\n    0.1074442701159656347825773424466062227946,\n    0.1074442701159656347825773424466062227946,\n    0.0976186521041138882698806644642471544279,\n    0.0976186521041138882698806644642471544279,\n    0.086190161531953275917185202983742667185,\n    0.086190161531953275917185202983742667185,\n    0.0733464814110803057340336152531165181193,\n    0.0733464814110803057340336152531165181193,\n    0.0592985849154367807463677585001085845412,\n    0.0592985849154367807463677585001085845412,\n    0.0442774388174198061686027482113382288593,\n    0.0442774388174198061686027482113382288593,\n    0.0285313886289336631813078159518782864491,\n    0.0285313886289336631813078159518782864491,\n    0.0123412297999871995468056670700372915759,\n    0.0123412297999871995468056670700372915759\n  ],\n\n  arcfn (t, derivativeFn) {\n    var d = derivativeFn(t);\n    var l = d.x * d.x + d.y * d.y;\n    if (typeof d.z !== 'undefined') {\n      l += d.z * d.z;\n    }\n    return sqrt(l);\n  },\n\n  /**\n   * Computes the point at {@code t} on the integral bezier curve defined by the control points {@code points}.\n   *\n   * @param {number} t - parameter to evaluate at\n   * @param {Array<{ x: number, y: number, z?: number }>} points - the control points\n   * @param {boolean}[_3d] - whether the bezier curve is in 3-space\n   */\n  compute (t, points, _3d) {\n    // shortcuts\n    if (t === 0) {\n      return points[0];\n    }\n\n    const order = points.length - 1;\n\n    if (t === 1) {\n      return points[order];\n    }\n\n    let p = points;\n    const mt = 1 - t;\n\n    // constant?\n    if (order === 0) {\n      return points[0];\n    }\n\n    // linear?\n    if (order === 1) {\n      const ret = {\n        x: mt * p[0].x + t * p[1].x,\n        y: mt * p[0].y + t * p[1].y\n      };\n      if (_3d) {\n        ret.z = mt * p[0].z + t * p[1].z;\n      }\n\n      return ret;\n    }\n\n    // quadratic/cubic curve?\n    if (order < 4) {\n      const mt2 = mt * mt;\n      const t2 = t * t;\n      let a;\n      let b;\n      let c;\n      let d = 0;\n      if (order === 2) {\n        p = [p[0], p[1], p[2], ZERO];\n        a = mt2;\n        b = mt * t * 2;\n        c = t2;\n      } else if (order === 3) {\n        a = mt2 * mt;\n        b = mt2 * t * 3;\n        c = mt * t2 * 3;\n        d = t * t2;\n      }\n      const ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y\n      };\n      if (_3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n      }\n\n      return ret;\n    }\n\n    // higher order curves: use de Casteljau's computation\n    var dCpts = JSON.parse(JSON.stringify(points));\n    while (dCpts.length > 1) {\n      for (var i = 0; i < dCpts.length - 1; i++) {\n        dCpts[i] = {\n          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t\n        };\n        if (typeof dCpts[i].z !== 'undefined') {\n          dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n        }\n      }\n      dCpts.splice(dCpts.length - 1, 1);\n    }\n\n    return dCpts[0];\n  },\n\n  /**\n   * Computes the point at {@code t} on the rational bezier curve defined by {@code points} and their\n   * {@code ratios}.\n   *\n   * @param {number} t\n   * @param {Array<{ x: number, y: number, z?: number }>} points\n   * @param {Array<number>} ratios\n   * @param {boolean}[_3d]\n   */\n  computeWithRatios (t, points, ratios, _3d) {\n    const mt = 1 - t;\n    const r = ratios;\n    const p = points;\n    let d;\n    let f1 = r[0]; let f2 = r[1]; let f3 = r[2]; let f4 = r[3];\n\n    // spec for linear\n    f1 *= mt;\n    f2 *= t;\n\n    if (p.length === 2) {\n      d = f1 + f2;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d\n      };\n    }\n\n    // upgrade to quadratic\n    f1 *= mt;\n    f2 *= 2 * mt;\n    f3 *= t * t;\n\n    if (p.length === 3) {\n      d = f1 + f2 + f3;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d\n      };\n    }\n\n    // upgrade to cubic\n    f1 *= mt;\n    f2 *= 1.5 * mt;\n    f3 *= 3 * mt;\n    f4 *= t * t * t;\n\n    if (p.length === 4) {\n      d = f1 + f2 + f3 + f4;\n\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d\n      };\n    }\n  },\n\n  /**\n   * Calculates the n-order derivatives of the integral bezier curve defined by {@code points}, where\n   * 1 < n â‰¤ {@code points.length - 1}.\n   *\n   * @param {Array<{ x: number, y: number, z?: number}>} points - control points of the bezier curve\n   * @param {boolean} _3d - whether the control points are defined in 3-space\n   * @returns {Array<Array<{ x: number, y: number, z?: number}>>} - control points of each derivative, in order of\n   *    ascending derivative order.\n   * @see https://pomax.github.io/bezierinfo/#derivatives\n   */\n  derive (points, _3d) {\n    const dpoints = []; // Control points of each derivative\n\n    let p = points;\n    let d = p.length; // Number of control points in curve being differentiated\n    let c = d - 1; // Number of control points in the next derivative\n\n    for (; d > 1; d--, c--) {\n      const list = new Array(c);\n\n      for (let j = 0; j < c; j++) {\n        const dpt = {\n          x: c * (p[j + 1].x - p[j].x),\n          y: c * (p[j + 1].y - p[j].y)\n        };\n        if (_3d) {\n          dpt.z = c * (p[j + 1].z - p[j].z);\n        }\n\n        list[j] = dpt;\n      }\n\n      dpoints.push(list);\n      p = list;\n    }\n\n    return dpoints;\n  },\n\n  between (v, m, M) {\n    return (\n      (m <= v && v <= M) ||\n      utils.approximately(v, m) ||\n      utils.approximately(v, M)\n    );\n  },\n\n  approximately (a, b, precision) {\n    return abs(a - b) <= (precision || epsilon);\n  },\n\n  length (derivativeFn) {\n    var z = 0.5;\n    var sum = 0;\n    var len = utils.Tvalues.length;\n    var i;\n    var t;\n    for (i = 0; i < len; i++) {\n      t = z * utils.Tvalues[i] + z;\n      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n    }\n    return z * sum;\n  },\n\n  map (v, ds, de, ts, te) {\n    var d1 = de - ds;\n    var d2 = te - ts;\n    var v2 = v - ds;\n    var r = v2 / d1;\n    return ts + d2 * r;\n  },\n\n  lerp (r, v1, v2) {\n    var ret = {\n      x: v1.x + r * (v2.x - v1.x),\n      y: v1.y + r * (v2.y - v1.y)\n    };\n    if (!!v1.z && !!v2.z) {\n      ret.z = v1.z + r * (v2.z - v1.z);\n    }\n    return ret;\n  },\n\n  pointToString (p) {\n    var s = p.x + '/' + p.y;\n    if (typeof p.z !== 'undefined') {\n      s += '/' + p.z;\n    }\n    return s;\n  },\n\n  pointsToString (points) {\n    return '[' + points.map(utils.pointToString).join(', ') + ']';\n  },\n\n  copy (obj) {\n    return JSON.parse(JSON.stringify(obj));\n  },\n\n  angle (o, v1, v2) {\n    var dx1 = v1.x - o.x;\n    var dy1 = v1.y - o.y;\n    var dx2 = v2.x - o.x;\n    var dy2 = v2.y - o.y;\n    var cross = dx1 * dy2 - dy1 * dx2;\n    var dot = dx1 * dx2 + dy1 * dy2;\n    return atan2(cross, dot);\n  },\n\n  // round as string, to avoid rounding errors\n  round (v, d) {\n    var s = '' + v;\n    var pos = s.indexOf('.');\n    return parseFloat(s.substring(0, pos + 1 + d));\n  },\n\n  dist (p1, p2) {\n    var dx = p1.x - p2.x;\n    var dy = p1.y - p2.y;\n    return sqrt(dx * dx + dy * dy);\n  },\n\n  closest (LUT, point) {\n    var mdist = pow(2, 63);\n    var mpos;\n    var d;\n    LUT.forEach(function (p, idx) {\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        mpos = idx;\n      }\n    });\n    return { mdist: mdist, mpos: mpos };\n  },\n\n  abcratio (t, n) {\n    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === 'undefined') {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    var bottom = pow(t, n) + pow(1 - t, n);\n    var top = bottom - 1;\n    return abs(top / bottom);\n  },\n\n  projectionratio (t, n) {\n    // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === 'undefined') {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    var top = pow(1 - t, n);\n    var bottom = pow(t, n) + top;\n    return top / bottom;\n  },\n\n  lli8 (x1, y1, x2, y2, x3, y3, x4, y4) {\n    const nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\n    const ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\n    const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n    if (d === 0) {\n      return false;\n    }\n\n    return { x: nx / d, y: ny / d };\n  },\n\n  lli4 (p1, p2, p3, p4) {\n    return utils.lli8(\n      p1.x, p1.y,\n      p2.x, p2.y,\n      p3.x, p3.y,\n      p4.x, p4.y);\n  },\n\n  lli (v1, v2) {\n    return utils.lli4(v1, v1.c, v2, v2.c);\n  },\n\n  makeline (p1, p2) {\n    var x1 = p1.x;\n    var y1 = p1.y;\n    var x2 = p2.x;\n    var y2 = p2.y;\n    var dx = (x2 - x1) / 3;\n    var dy = (y2 - y1) / 3;\n    return new Bezier(\n      x1,\n      y1,\n      x1 + dx,\n      y1 + dy,\n      x1 + 2 * dx,\n      y1 + 2 * dy,\n      x2,\n      y2\n    );\n  },\n\n  findbbox (sections) {\n    var mx = nMax;\n    var my = nMax;\n    var MX = nMin;\n    var MY = nMin;\n    sections.forEach(function (s) {\n      var bbox = s.bbox();\n      if (mx > bbox.x.min) mx = bbox.x.min;\n      if (my > bbox.y.min) my = bbox.y.min;\n      if (MX < bbox.x.max) MX = bbox.x.max;\n      if (MY < bbox.y.max) MY = bbox.y.max;\n    });\n    return {\n      x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },\n      y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my }\n    };\n  },\n\n  shapeintersections (\n    s1,\n    bbox1,\n    s2,\n    bbox2,\n    curveIntersectionThreshold\n  ) {\n    if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n    var intersections = [];\n    var a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n    var a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n    a1.forEach(function (l1) {\n      if (l1.virtual) return;\n      a2.forEach(function (l2) {\n        if (l2.virtual) return;\n        var iss = l1.intersects(l2, curveIntersectionThreshold);\n        if (iss.length > 0) {\n          iss.c1 = l1;\n          iss.c2 = l2;\n          iss.s1 = s1;\n          iss.s2 = s2;\n          intersections.push(iss);\n        }\n      });\n    });\n    return intersections;\n  },\n\n  makeshape (forward, back, curveIntersectionThreshold) {\n    var bpl = back.points.length;\n    var fpl = forward.points.length;\n    var start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n    var end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n    var shape = {\n      startcap: start,\n      forward: forward,\n      back: back,\n      endcap: end,\n      bbox: utils.findbbox([start, forward, back, end])\n    };\n    var self = utils;\n    shape.intersections = function (s2) {\n      return self.shapeintersections(\n        shape,\n        shape.bbox,\n        s2,\n        s2.bbox,\n        curveIntersectionThreshold\n      );\n    };\n    return shape;\n  },\n\n  getminmax (curve, d, list) {\n    if (!list) return { min: 0, max: 0 };\n    var min = nMax;\n    var max = nMin;\n    var t;\n    var c;\n    if (list.indexOf(0) === -1) {\n      list = [0].concat(list);\n    }\n    if (list.indexOf(1) === -1) {\n      list.push(1);\n    }\n    for (var i = 0, len = list.length; i < len; i++) {\n      t = list[i];\n      c = curve.get(t);\n      if (c[d] < min) {\n        min = c[d];\n      }\n      if (c[d] > max) {\n        max = c[d];\n      }\n    }\n    return { min: min, mid: (min + max) / 2, max: max, size: max - min };\n  },\n\n  align (points, line) {\n    var tx = line.p1.x;\n    var ty = line.p1.y;\n    var a = -atan2(line.p2.y - ty, line.p2.x - tx);\n    var d = function (v) {\n      return {\n        x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n        y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a)\n      };\n    };\n    return points.map(d);\n  },\n\n  roots (points, line) {\n    line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };\n    const order = points.length - 1;\n    var p = utils.align(points, line);\n\n    const reduce = function (t) {\n      return t >= 0 && t <= 1;\n    };\n\n    if (order === 2) {\n      const a = p[0].y;\n      const b = p[1].y;\n      const c = p[2].y;\n      const d = a - 2 * b + c;\n\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c);\n        const m2 = -a + b;\n        const v1 = -(m1 + m2) / d;\n        const v2 = -(-m1 + m2) / d;\n\n        return [v1, v2].filter(reduce);\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);\n      }\n\n      return [];\n    }\n\n    // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n    var pa = p[0].y;\n    var pb = p[1].y;\n    var pc = p[2].y;\n    var pd = p[3].y;\n    var d = -pa + 3 * pb - 3 * pc + pd;\n    var a = 3 * pa - 6 * pb + 3 * pc;\n    var b = -3 * pa + 3 * pb;\n    var c = pa;\n\n    if (utils.approximately(d, 0)) {\n      // this is not a cubic curve.\n      if (utils.approximately(a, 0)) {\n        // in fact, this is not a quadratic curve either.\n        if (utils.approximately(b, 0)) {\n          // in fact in fact, there are no solutions.\n          return [];\n        }\n        // linear solution:\n        return [-c / b].filter(reduce);\n      }\n      // quadratic solution:\n      var q = sqrt(b * b - 4 * a * c);\n      var a2 = 2 * a;\n      return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n    }\n\n    // at this point, we know we need a cubic solution:\n    a /= d;\n    b /= d;\n    c /= d;\n\n    p = (3 * b - a * a) / 3;\n    var p3 = p / 3;\n    q = (2 * a * a * a - 9 * a * b + 27 * c) / 27;\n    var q2 = q / 2;\n    var discriminant = q2 * q2 + p3 * p3 * p3;\n    var u1;\n    var v1;\n    var x1;\n    var x2;\n    var x3;\n\n    if (discriminant < 0) {\n      var mp3 = -p / 3;\n      var mp33 = mp3 * mp3 * mp3;\n      var r = sqrt(mp33);\n      var t = -q / (2 * r);\n      var cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\n      var phi = acos(cosphi);\n      var crtr = crt(r);\n      var t1 = 2 * crtr;\n      x1 = t1 * cos(phi / 3) - a / 3;\n      x2 = t1 * cos((phi + tau) / 3) - a / 3;\n      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n\n      return [x1, x2, x3].filter(reduce);\n    } else if (discriminant === 0) {\n      u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n      x1 = 2 * u1 - a / 3;\n      x2 = -u1 - a / 3;\n\n      return [x1, x2].filter(reduce);\n    } else {\n      var sd = sqrt(discriminant);\n      u1 = crt(-q2 + sd);\n      v1 = crt(q2 + sd);\n\n      return [u1 - v1 - a / 3].filter(reduce);\n    }\n  },\n\n  droots (p) {\n    // quadratic roots are easy\n    if (p.length === 3) {\n      var a = p[0];\n      var b = p[1];\n      var c = p[2];\n      var d = a - 2 * b + c;\n      if (d !== 0) {\n        var m1 = -sqrt(b * b - a * c);\n        var m2 = -a + b;\n        var v1 = -(m1 + m2) / d;\n        var v2 = -(-m1 + m2) / d;\n        return [v1, v2];\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * (b - c))];\n      }\n      return [];\n    }\n\n    // linear roots are even easier\n    if (p.length === 2) {\n      const a = p[0];\n      const b = p[1];\n\n      if (a !== b) {\n        return [a / (a - b)];\n      }\n\n      return [];\n    }\n  },\n\n  curvature (t, points, _3d, kOnly) {\n    var dpoints = utils.derive(points);\n    var d1 = dpoints[0];\n    var d2 = dpoints[1];\n    var num; var dnm; var adk; var dk; var k = 0; var r = 0;\n\n    //\n    // We're using the following formula for curvature:\n    //\n    //              x'y\" - y'x\"\n    //   k(t) = ------------------\n    //           (x'Â² + y'Â²)^(3/2)\n    //\n    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n    //\n    // With it corresponding 3D counterpart:\n    //\n    //          sqrt( (y'z\" - y\"z')Â² + (z'x\" - z\"x')Â² + (x'y\" - x\"y')Â²)\n    //   k(t) = -------------------------------------------------------\n    //                     (x'Â² + y'Â² + z'Â²)^(3/2)\n    //\n\n    var d = utils.compute(t, d1);\n    var dd = utils.compute(t, d2);\n    var qdsum = d.x * d.x + d.y * d.y;\n    if (_3d) {\n      num = sqrt(\n        pow(d.y * dd.z - dd.y * d.z, 2) +\n        pow(d.z * dd.x - dd.z * d.x, 2) +\n        pow(d.x * dd.y - dd.x * d.y, 2)\n      );\n      dnm = pow(qdsum + d.z * d.z, 3 / 2);\n    } else {\n      num = d.x * dd.y - d.y * dd.x;\n      dnm = pow(qdsum, 3 / 2);\n    }\n\n    if (num === 0 || dnm === 0) {\n      return { k: 0, r: 0 };\n    }\n\n    k = num / dnm;\n    r = dnm / num;\n\n    // We're also computing the derivative of kappa, because\n    // there is value in knowing the rate of change for the\n    // curvature along the curve. And we're just going to\n    // ballpark it based on an epsilon.\n    if (!kOnly) {\n      // compute k'(t) based on the interval before, and after it,\n      // to at least try to not introduce forward/backward pass bias.\n      var pk = utils.curvature(t - 0.001, points, _3d, true).k;\n      var nk = utils.curvature(t + 0.001, points, _3d, true).k;\n      dk = ((nk - k) + (k - pk)) / 2;\n      adk = (abs(nk - k) + abs(k - pk)) / 2;\n    }\n\n    return { k: k, r: r, dk: dk, adk: adk };\n  },\n\n  inflections (points) {\n    if (points.length < 4) return [];\n\n    // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n    var p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] });\n    var a = p[2].x * p[1].y;\n    var b = p[3].x * p[1].y;\n    var c = p[1].x * p[2].y;\n    var d = p[3].x * p[2].y;\n    var v1 = 18 * (-3 * a + 2 * b + 3 * c - d);\n    var v2 = 18 * (3 * a - b - 3 * c);\n    var v3 = 18 * (c - a);\n\n    if (utils.approximately(v1, 0)) {\n      if (!utils.approximately(v2, 0)) {\n        var t = -v3 / v2;\n        if (t >= 0 && t <= 1) return [t];\n      }\n      return [];\n    }\n\n    var trm = v2 * v2 - 4 * v1 * v3;\n    var sq = Math.sqrt(trm);\n    d = 2 * v1;\n\n    if (utils.approximately(d, 0)) return [];\n\n    return [(sq - v2) / d, -(v2 + sq) / d].filter(function (r) {\n      return r >= 0 && r <= 1;\n    });\n  },\n\n  bboxoverlap (b1, b2) {\n    var dims = ['x', 'y'];\n    var len = dims.length;\n    var i;\n    var dim;\n    var l;\n    var t;\n    var d;\n    for (i = 0; i < len; i++) {\n      dim = dims[i];\n      l = b1[dim].mid;\n      t = b2[dim].mid;\n      d = (b1[dim].size + b2[dim].size) / 2;\n      if (abs(l - t) >= d) return false;\n    }\n    return true;\n  },\n\n  expandbox (bbox, _bbox) {\n    if (_bbox.x.min < bbox.x.min) {\n      bbox.x.min = _bbox.x.min;\n    }\n    if (_bbox.y.min < bbox.y.min) {\n      bbox.y.min = _bbox.y.min;\n    }\n    if (_bbox.z && _bbox.z.min < bbox.z.min) {\n      bbox.z.min = _bbox.z.min;\n    }\n    if (_bbox.x.max > bbox.x.max) {\n      bbox.x.max = _bbox.x.max;\n    }\n    if (_bbox.y.max > bbox.y.max) {\n      bbox.y.max = _bbox.y.max;\n    }\n    if (_bbox.z && _bbox.z.max > bbox.z.max) {\n      bbox.z.max = _bbox.z.max;\n    }\n    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n    if (bbox.z) {\n      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n    }\n    bbox.x.size = bbox.x.max - bbox.x.min;\n    bbox.y.size = bbox.y.max - bbox.y.min;\n    if (bbox.z) {\n      bbox.z.size = bbox.z.max - bbox.z.min;\n    }\n  },\n\n  pairiteration (c1, c2, curveIntersectionThreshold) {\n    var c1b = c1.bbox();\n    var c2b = c2.bbox();\n    var r = 100000;\n    var threshold = curveIntersectionThreshold || 0.5;\n    if (\n      c1b.x.size + c1b.y.size < threshold &&\n      c2b.x.size + c2b.y.size < threshold\n    ) {\n      return [\n        ((r * (c1._t1 + c1._t2) / 2) | 0) / r +\n          '/' +\n          ((r * (c2._t1 + c2._t2) / 2) | 0) / r\n      ];\n    }\n    var cc1 = c1.split(0.5);\n    var cc2 = c2.split(0.5);\n    var pairs = [\n      { left: cc1.left, right: cc2.left },\n      { left: cc1.left, right: cc2.right },\n      { left: cc1.right, right: cc2.right },\n      { left: cc1.right, right: cc2.left }\n    ];\n    pairs = pairs.filter(function (pair) {\n      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n    });\n    var results = [];\n    if (pairs.length === 0) return results;\n    pairs.forEach(function (pair) {\n      results = results.concat(\n        utils.pairiteration(pair.left, pair.right, threshold)\n      );\n    });\n    results = results.filter(function (v, i) {\n      return results.indexOf(v) === i;\n    });\n    return results;\n  },\n\n  getccenter (p1, p2, p3) {\n    var dx1 = p2.x - p1.x;\n    var dy1 = p2.y - p1.y;\n    var dx2 = p3.x - p2.x;\n    var dy2 = p3.y - p2.y;\n    var dx1p = dx1 * cos(quart) - dy1 * sin(quart);\n    var dy1p = dx1 * sin(quart) + dy1 * cos(quart);\n    var dx2p = dx2 * cos(quart) - dy2 * sin(quart);\n    var dy2p = dx2 * sin(quart) + dy2 * cos(quart);\n    // chord midpoints\n    var mx1 = (p1.x + p2.x) / 2;\n    var my1 = (p1.y + p2.y) / 2;\n    var mx2 = (p2.x + p3.x) / 2;\n    var my2 = (p2.y + p3.y) / 2;\n    // midpoint offsets\n    var mx1n = mx1 + dx1p;\n    var my1n = my1 + dy1p;\n    var mx2n = mx2 + dx2p;\n    var my2n = my2 + dy2p;\n    // intersection of these lines:\n    var arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n);\n    var r = utils.dist(arc, p1);\n    // arc start/end values, over mid point:\n    var s = atan2(p1.y - arc.y, p1.x - arc.x);\n    var m = atan2(p2.y - arc.y, p2.x - arc.x);\n    var e = atan2(p3.y - arc.y, p3.x - arc.x);\n    var _;\n    // determine arc direction (cw/ccw correction)\n    if (s < e) {\n      // if s<m<e, arc(s, e)\n      // if m<s<e, arc(e, s + tau)\n      // if s<e<m, arc(e, s + tau)\n      if (s > m || m > e) {\n        s += tau;\n      }\n      if (s > e) {\n        _ = e;\n        e = s;\n        s = _;\n      }\n    } else {\n      // if e<m<s, arc(e, s)\n      // if m<e<s, arc(s, e + tau)\n      // if e<s<m, arc(s, e + tau)\n      if (e < m && m < s) {\n        _ = e;\n        e = s;\n        s = _;\n      } else {\n        e += tau;\n      }\n    }\n    // assign and done.\n    arc.s = s;\n    arc.e = e;\n    arc.r = r;\n    return arc;\n  },\n\n  numberSort (a, b) {\n    return a - b;\n  }\n};\n\nexport default utils;\n","import utils from './utils';\n\n/**\n * {@code PolyBezier} is a spline composed of {@link Bezier} curves.\n */\nexport class PolyBezier {\n  /**\n   * Poly Bezier\n   * @param {Bezier[]}[curves]\n   */\n  constructor (curves) {\n    this.curves = [];\n    this._3d = false;\n\n    if (curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  valueOf () {\n    return this.toString();\n  }\n\n  toString () {\n    return (\n      '[' +\n      this.curves\n        .map(function (curve) {\n          return utils.pointsToString(curve.points);\n        })\n        .join(', ') +\n      ']'\n    );\n  }\n\n  /**\n   * @param {Bezier} curve\n   */\n  addCurve (curve) {\n    this.curves.push(curve);\n    this._3d = this._3d || curve._3d;\n  }\n\n  /**\n   * @returns {number} the sum of the arc lengths of each subcurve\n   */\n  length () {\n    return this.curves\n      .map(function (v) {\n        return v.length();\n      })\n      .reduce(function (a, b) {\n        return a + b;\n      });\n  }\n\n  curve (idx) {\n    return this.curves[idx];\n  }\n\n  bbox () {\n    var c = this.curves;\n    var bbox = c[0].bbox();\n    for (var i = 1; i < c.length; i++) {\n      utils.expandbox(bbox, c[i].bbox());\n    }\n    return bbox;\n  }\n\n  offset (d) {\n    let offset = [];\n\n    this.curves.forEach(function (v) {\n      offset = offset.concat(v.offset(d));\n    });\n\n    return new PolyBezier(offset);\n  }\n}\n","/**\n * Normalise an SVG path to absolute coordinates\n * and full commands, rather than relative coordinates\n * and/or shortcut commands.\n */\nexport function normalisePath (d) {\n  // preprocess \"d\" so that we have spaces between values\n  d = d\n    .replace(/,/g, ' ') // replace commas with spaces\n    .replace(/-/g, ' - ') // add spacing around minus signs\n    .replace(/-\\s+/g, '-') // remove spacing to the right of minus signs.\n    .replace(/([a-zA-Z])/g, ' $1 ');\n\n  // set up the variables used in this function\n  const instructions = d.replace(/([a-zA-Z])\\s?/g, '|$1').split('|');\n  const instructionLength = instructions.length;\n  let i;\n  let instruction;\n  let op;\n  let lop;\n  let args = [];\n  let alen;\n  let a;\n  let sx = 0;\n  let sy = 0;\n  let x = 0;\n  let y = 0;\n  let cx = 0;\n  let cy = 0;\n  let cx2 = 0;\n  let cy2 = 0;\n  let normalized = '';\n\n  // we run through the instruction list starting at 1, not 0,\n  // because we split up \"|M x y ....\" so the first element will\n  // always be an empty string. By design.\n  for (i = 1; i < instructionLength; i++) {\n    // which instruction is this?\n    instruction = instructions[i];\n    op = instruction.substring(0, 1);\n    lop = op.toLowerCase();\n\n    // what are the arguments? note that we need to convert\n    // all strings into numbers, or + will do silly things.\n    args = instruction\n      .replace(op, '')\n      .trim()\n      .split(' ');\n    args = args\n      .filter(function (v) {\n        return v !== '';\n      })\n      .map(parseFloat);\n    alen = args.length;\n\n    // we could use a switch, but elaborate code in a \"case\" with\n    // fallthrough is just horrid to read. So let's use ifthen\n    // statements instead.\n\n    // moveto command (plus possible lineto)\n    if (lop === 'm') {\n      normalized += 'M ';\n      if (op === 'm') {\n        x += args[0];\n        y += args[1];\n      } else {\n        x = args[0];\n        y = args[1];\n      }\n      // records start position, for dealing\n      // with the shape close operator ('Z')\n      sx = x;\n      sy = y;\n      normalized += x + ' ' + y + ' ';\n      if (alen > 2) {\n        for (a = 0; a < alen; a += 2) {\n          if (op === 'm') {\n            x += args[a];\n            y += args[a + 1];\n          } else {\n            x = args[a];\n            y = args[a + 1];\n          }\n          normalized += ['L', x, y, ''].join(' ');\n        }\n      }\n    } else if (lop === 'l') {\n      // lineto commands\n      for (a = 0; a < alen; a += 2) {\n        if (op === 'l') {\n          x += args[a];\n          y += args[a + 1];\n        } else {\n          x = args[a];\n          y = args[a + 1];\n        }\n        normalized += ['L', x, y, ''].join(' ');\n      }\n    } else if (lop === 'h') {\n      for (a = 0; a < alen; a++) {\n        if (op === 'h') {\n          x += args[a];\n        } else {\n          x = args[a];\n        }\n        normalized += ['L', x, y, ''].join(' ');\n      }\n    } else if (lop === 'v') {\n      for (a = 0; a < alen; a++) {\n        if (op === 'v') {\n          y += args[a];\n        } else {\n          y = args[a];\n        }\n        normalized += ['L', x, y, ''].join(' ');\n      }\n    } else if (lop === 'q') {\n      // quadratic curveto commands\n      for (a = 0; a < alen; a += 4) {\n        if (op === 'q') {\n          cx = x + args[a];\n          cy = y + args[a + 1];\n          x += args[a + 2];\n          y += args[a + 3];\n        } else {\n          cx = args[a];\n          cy = args[a + 1];\n          x = args[a + 2];\n          y = args[a + 3];\n        }\n        normalized += ['Q', cx, cy, x, y, ''].join(' ');\n      }\n    } else if (lop === 't') {\n      for (a = 0; a < alen; a += 2) {\n        // reflect previous cx/cy over x/y\n        cx = x + (x - cx);\n        cy = y + (y - cy);\n        // then get real end point\n        if (op === 't') {\n          x += args[a];\n          y += args[a + 1];\n        } else {\n          x = args[a];\n          y = args[a + 1];\n        }\n        normalized += ['Q', cx, cy, x, y, ''].join(' ');\n      }\n    } else if (lop === 'c') {\n      // cubic curveto commands\n      for (a = 0; a < alen; a += 6) {\n        if (op === 'c') {\n          cx = x + args[a];\n          cy = y + args[a + 1];\n          cx2 = x + args[a + 2];\n          cy2 = y + args[a + 3];\n          x += args[a + 4];\n          y += args[a + 5];\n        } else {\n          cx = args[a];\n          cy = args[a + 1];\n          cx2 = args[a + 2];\n          cy2 = args[a + 3];\n          x = args[a + 4];\n          y = args[a + 5];\n        }\n        normalized += ['C', cx, cy, cx2, cy2, x, y, ''].join(' ');\n      }\n    } else if (lop === 's') {\n      for (a = 0; a < alen; a += 4) {\n        // reflect previous cx2/cy2 over x/y\n        cx = x + (x - cx2);\n        cy = y + (y - cy2);\n        // then get real control and end point\n        if (op === 's') {\n          cx2 = x + args[a];\n          cy2 = y + args[a + 1];\n          x += args[a + 2];\n          y += args[a + 3];\n        } else {\n          cx2 = args[a];\n          cy2 = args[a + 1];\n          x = args[a + 2];\n          y = args[a + 3];\n        }\n        normalized += ['C', cx, cy, cx2, cy2, x, y, ''].join(' ');\n      }\n    } else if (lop === 'z') {\n      normalized += 'Z ';\n      // not unimportant: path closing changes the current x/y coordinate\n      x = sx;\n      y = sy;\n    }\n  }\n\n  return normalized.trim();\n}\n","import { normalisePath as normalise } from './normalise-svg';\n\nvar M = { x: false, y: false };\n\nfunction makeBezier (Bezier, term, values) {\n  if (term === 'Z') return;\n  if (term === 'M') {\n    M = { x: values[0], y: values[1] };\n    return;\n  }\n  // ES7: new Bezier(M.x, M.y, ...values)\n  var cvalues = [false, M.x, M.y].concat(values);\n  var PreboundConstructor = Bezier.bind.apply(Bezier, cvalues);\n  var curve = new PreboundConstructor();\n  var last = values.slice(-2);\n  M = { x: last[0], y: last[1] };\n  return curve;\n}\n\nexport function convertPath (Bezier, d) {\n  var terms = normalise(d).split(' ');\n  var term;\n  var matcher = new RegExp('[MLCQZ]', '');\n  var segment;\n  var values;\n  var segments = [];\n  var ARGS = { C: 6, Q: 4, L: 2, M: 2 };\n\n  while (terms.length) {\n    term = terms.splice(0, 1)[0];\n    if (matcher.test(term)) {\n      values = terms.splice(0, ARGS[term]).map(parseFloat);\n      segment = makeBezier(Bezier, term, values);\n      if (segment) segments.push(segment);\n    }\n  }\n\n  return new Bezier.PolyBezier(segments);\n}\n","import utils from './utils.js';// quite needed\nimport { PolyBezier } from './PolyBezier';// only used for outlines atm.\nimport { convertPath as svgToBeziers } from './svg-to-beziers';\n\nconst abs = Math.abs;\nconst min = Math.min;\nconst max = Math.max;\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst acos = Math.acos;\nconst sqrt = Math.sqrt;\nconst pi = Math.PI;\n// a zero coordinate, which is surprisingly useful\nconst ZERO = { x: 0, y: 0, z: 0 };\n\n// Components of vectors in 2-space\n// const VECTOR2_COMPONENTS = ['x', 'y'];\n\n// Components of vectors in 3-space\nconst VECTOR3_COMPONENTS = ['x', 'y', 'z'];\n\nfunction getABC (n, S, B, E, t) {\n  if (typeof t === 'undefined') {\n    t = 0.5;\n  }\n  var u = utils.projectionratio(t, n);\n  var um = 1 - u;\n  var C = {\n    x: u * S.x + um * E.x,\n    y: u * S.y + um * E.y\n  };\n  var s = utils.abcratio(t, n);\n  var A = {\n    x: B.x + (B.x - C.x) / s,\n    y: B.y + (B.y - C.y) / s\n  };\n  return { A: A, B: B, C: C };\n}\n\nexport class Bezier {\n  /**\n   * Bezier curve constructor. The constructor argument can be one of three things:\n   *\n   * 1. array/4 of {x:..., y:..., z:...}, z optional\n   * 2. numerical array/8 ordered x1,y1,x2,y2,x3,y3,x4,y4\n   * 3. numerical array/12 ordered x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4\n   *\n   * @param {*} coords\n   */\n  constructor (coords) {\n    let args = coords && coords.forEach ? coords : [].slice.call(arguments);\n    let coordlen = false;\n\n    if (typeof args[0] === 'object') {\n      coordlen = args.length;\n\n      const newargs = [];\n\n      args.forEach((point) => {\n        VECTOR3_COMPONENTS.forEach(function (d) {\n          if (typeof point[d] !== 'undefined') {\n            newargs.push(point[d]);\n          }\n        });\n      });\n\n      args = newargs;\n    }\n\n    let higher = false;\n    const len = args.length;\n\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            'Only new Bezier(point[]) is accepted for 4th and higher order curves'\n          );\n        }\n\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            'Only new Bezier(point[]) is accepted for 4th and higher order curves'\n          );\n        }\n      }\n    }\n\n    const _3d =\n      (!higher && (len === 9 || len === 12)) ||\n      (coords && coords[0] && typeof coords[0].z !== 'undefined');\n    this._3d = _3d;\n\n    const points = [];\n\n    for (var idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      const point = {\n        x: args[idx],\n        y: args[idx + 1]\n      };\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n\n      points.push(point);\n    }\n\n    this.order = points.length - 1;\n    this.points = points;\n\n    var dims = ['x', 'y'];\n    if (_3d) dims.push('z');\n\n    this.dims = dims;\n    this.dimlen = dims.length;\n\n    (function (curve) {\n      var order = curve.order;\n      var points = curve.points;\n      var a = utils.align(points, { p1: points[0], p2: points[order] });\n      for (var i = 0; i < a.length; i++) {\n        if (abs(a[i].y) > 0.0001) {\n          curve._linear = false;\n          return;\n        }\n      }\n      curve._linear = true;\n    })(this);\n\n    this._t1 = 0;\n    this._t2 = 1;\n\n    this.update();\n  }\n\n  point (idx) {\n    return this.points[idx];\n  }\n\n  get (t) {\n    return this.compute(t);\n  }\n\n  compute (t) {\n    if (this.ratios) {\n      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n    }\n\n    return utils.compute(t, this.points, this._3d, this.ratios);\n  }\n\n  /**\n   * @param {number[]} ratios - ratios of each control points\n   */\n  setRatios (ratios) {\n    if (ratios.length !== this.points.length) {\n      throw new Error('Incorrect number of ratio values');\n    }\n\n    this.ratios = ratios;\n    this._lut = []; //  invalidate any precomputed LUT\n  }\n\n  /**\n   * @param {number} steps\n   * @returns {Array<{ x: number, y: number, z?: number}>}\n   */\n  getLUT (steps) {\n    this.verify();\n    steps = steps || 100;\n\n    if (this._lut.length === steps) {\n      return this._lut;\n    }\n\n    this._lut = [];\n\n    // We want a range from 0 to 1 inclusive, so\n    // we decrement and then use <= rather than <:\n    steps--;\n    for (let t = 0; t <= steps; t++) {\n      this._lut.push(this.compute(t / steps));\n    }\n\n    return this._lut;\n  }\n\n  on (point, error) {\n    error = error || 5;\n    const lut = this.getLUT();\n    const hits = [];\n    let c;\n    let t = 0;\n\n    for (var i = 0; i < lut.length; i++) {\n      c = lut[i];\n      if (utils.dist(c, point) < error) {\n        hits.push(c);\n        t += i / lut.length;\n      }\n    }\n\n    if (!hits.length) return false;\n    return (t /= hits.length);\n  }\n\n  /**\n   * Projects the {@code point} on to this curve.\n   *\n   * @param {{ x: number, y: number, z?: number }} point\n   * @returns {{ x: number, y: number, z?: number }}\n   */\n  project (point) {\n    // step 1: coarse check\n    const LUT = this.getLUT();\n    const l = LUT.length - 1;\n    const closest = utils.closest(LUT, point);\n    let mdist = closest.mdist;\n    const mpos = closest.mpos;\n\n    // step 2: fine check\n    var ft;\n    var t;\n    var p;\n    var d;\n    var t1 = (mpos - 1) / l;\n    var t2 = (mpos + 1) / l;\n    var step = 0.1 / l;\n    mdist += 1;\n    for (t = t1, ft = t; t < t2 + step; t += step) {\n      p = this.compute(t);\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        ft = t;\n      }\n    }\n    p = this.compute(ft);\n    p.t = ft;\n    p.d = mdist;\n\n    return p;\n  }\n\n  /**\n   * @returns a {@code Bezier} curve with \"n + 1\" control points, where \"n\" is the number of control\n   *  points in this curve, equivalent to this curve.\n   */\n  raise () {\n    const p = this.points;\n    const np = [p[0]];\n    const k = p.length;\n    let pi;\n    let pim;\n\n    for (let i = 1; i < k; i++) {\n      pi = p[i];\n      pim = p[i - 1];\n      np[i] = {\n        x: (k - i) / k * pi.x + i / k * pim.x,\n        y: (k - i) / k * pi.y + i / k * pim.y\n      };\n    }\n\n    np[k] = p[k - 1];\n\n    return new Bezier(np);\n  }\n\n  /**\n   * Calculates the arc length of this curve in the interval t âˆŠ [0,1].\n   */\n  length () {\n    return utils.length(this.derivative.bind(this));\n  }\n\n  /**\n   * Calculates the tangent vector to this curve at {@code t}. This is equivalent to computing the derivative\n   * curve at {@code t}.\n   *\n   * @param {number} t\n   * @returns {{ x: number, y: number, z?: number }}\n   * @see https://pomax.github.io/bezierinfo/#derivatives\n   */\n  derivative = (t) => {\n    const mt = 1 - t;\n    let a;\n    let b;\n    let c = 0;\n    let p = this.dpoints[0];\n\n    if (this.order === 2) {\n      p = [p[0], p[1], ZERO];\n      a = mt;\n      b = t;\n    }\n    if (this.order === 3) {\n      a = mt * mt;\n      b = mt * t * 2;\n      c = t * t;\n    }\n\n    const ret = {\n      x: a * p[0].x + b * p[1].x + c * p[2].x,\n      y: a * p[0].y + b * p[1].y + c * p[2].y\n    };\n    if (this._3d) {\n      ret.z = a * p[0].z + b * p[1].z + c * p[2].z;\n    }\n\n    return ret;\n  }\n\n  curvature (t) {\n    return utils.curvature(t, this.points, this._3d);\n  }\n\n  inflections () {\n    return utils.inflections(this.points);\n  }\n\n  normal (t) {\n    return this._3d ? this.__normal3(t) : this.__normal2(t);\n  }\n\n  /**\n   * @private\n   */\n  __normal2 (t) {\n    const d = this.derivative(t);\n    const q = sqrt(d.x * d.x + d.y * d.y);\n\n    return { x: -d.y / q, y: d.x / q };\n  }\n\n  /**\n   * @private\n   */\n  __normal3 (t) {\n    // see http://stackoverflow.com/questions/25453159\n    const r1 = this.derivative(t);\n    const r2 = this.derivative(t + 0.01);\n    const q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z);\n    const q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n    r1.x /= q1;\n    r1.y /= q1;\n    r1.z /= q1;\n    r2.x /= q2;\n    r2.y /= q2;\n    r2.z /= q2;\n\n    // cross product\n    const c = {\n      x: r2.y * r1.z - r2.z * r1.y,\n      y: r2.z * r1.x - r2.x * r1.z,\n      z: r2.x * r1.y - r2.y * r1.x\n    };\n    const m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);\n\n    c.x /= m;\n    c.y /= m;\n    c.z /= m;\n\n    // rotation matrix\n    const R = [\n      c.x * c.x,\n      c.x * c.y - c.z,\n      c.x * c.z + c.y,\n      c.x * c.y + c.z,\n      c.y * c.y,\n      c.y * c.z - c.x,\n      c.x * c.z - c.y,\n      c.y * c.z + c.x,\n      c.z * c.z\n    ];\n\n    // normal vector:\n    const n = {\n      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z\n    };\n\n    return n;\n  }\n\n  hull (t) {\n    let p = this.points;\n    let _p = [];\n    let pt;\n    const q = [];\n    let idx = 0;\n    let i = 0;\n    let l = 0;\n    q[idx++] = p[0];\n    q[idx++] = p[1];\n    q[idx++] = p[2];\n    if (this.order === 3) {\n      q[idx++] = p[3];\n    }\n\n    // we lerp between all points at each iteration, until we have 1 point left.\n    while (p.length > 1) {\n      _p = [];\n      for (i = 0, l = p.length - 1; i < l; i++) {\n        pt = utils.lerp(t, p[i], p[i + 1]);\n        q[idx++] = pt;\n        _p.push(pt);\n      }\n      p = _p;\n    }\n\n    return q;\n  }\n\n  /**\n   * Splits the bezier curve\n   *\n   * + If both {@code t1} and {@code t2} are provided, the curve spanning between the two parameters is returned.\n   * + If only {@code t1} is passed, then an both the left (from 0 to {@code t1}) and right (from {@code t1} to 1)\n   *    curves are returned.\n   *\n   * @param {number} t1\n   * @param {number} t2\n   * @returns {Bezier | {\n   *  left: Bezier,\n   *  right: Bezier,\n   *  span: number\n   * }}\n   */\n  split (t1, t2) {\n    // shortcuts\n    if (t1 === 0 && !!t2) {\n      return this.split(t2).left;\n    }\n    if (t2 === 1) {\n      return this.split(t1).right;\n    }\n\n    // no shortcut: use \"de Casteljau\" iteration.\n    var q = this.hull(t1);\n    var result = {\n      left:\n        this.order === 2\n          ? new Bezier([q[0], q[3], q[5]])\n          : new Bezier([q[0], q[4], q[7], q[9]]),\n      right:\n        this.order === 2\n          ? new Bezier([q[5], q[4], q[2]])\n          : new Bezier([q[9], q[8], q[6], q[3]]),\n      span: q\n    };\n\n    // make sure we bind _t1/_t2 information!\n    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);\n\n    // if we have no t2, we're done\n    if (!t2) {\n      return result;\n    }\n\n    // if we have a t2, split again:\n    t2 = utils.map(t2, t1, 1, 0, 1);\n    const subsplit = result.right.split(t2);\n\n    return subsplit.left;\n  }\n\n  extrema () {\n    const dims = this.dims;\n    const result = {};\n    let roots = [];\n    let p;\n    let mfn;\n\n    dims.forEach(\n      function (dim) {\n        mfn = function (v) {\n          return v[dim];\n        };\n        p = this.dpoints[0].map(mfn);\n        result[dim] = utils.droots(p);\n        if (this.order === 3) {\n          p = this.dpoints[1].map(mfn);\n          result[dim] = result[dim].concat(utils.droots(p));\n        }\n        result[dim] = result[dim].filter(function (t) {\n          return t >= 0 && t <= 1;\n        });\n        roots = roots.concat(result[dim].sort(utils.numberSort));\n      }.bind(this)\n    );\n\n    roots = roots.sort(utils.numberSort).filter(function (v, idx) {\n      return roots.indexOf(v) === idx;\n    });\n\n    result.values = roots;\n\n    return result;\n  }\n\n  bbox () {\n    const extrema = this.extrema();\n    const result = {};\n    this.dims.forEach(\n      function (d) {\n        result[d] = utils.getminmax(this, d, extrema[d]);\n      }.bind(this)\n    );\n\n    return result;\n  }\n\n  overlaps (curve) {\n    const lbbox = this.bbox();\n    const tbbox = curve.bbox();\n\n    return utils.bboxoverlap(lbbox, tbbox);\n  }\n\n  offset (t, d) {\n    if (typeof d !== 'undefined') {\n      var c = this.get(t);\n      var n = this.normal(t);\n      var ret = {\n        c: c,\n        n: n,\n        x: c.x + n.x * d,\n        y: c.y + n.y * d\n      };\n      if (this._3d) {\n        ret.z = c.z + n.z * d;\n      }\n      return ret;\n    }\n\n    if (this._linear) {\n      var nv = this.normal(0);\n      var coords = this.points.map(function (p) {\n        var ret = {\n          x: p.x + t * nv.x,\n          y: p.y + t * nv.y\n        };\n        if (p.z && n.z) {\n          ret.z = p.z + t * nv.z;\n        }\n        return ret;\n      });\n      return [new Bezier(coords)];\n    }\n\n    const reduced = this.reduce();\n\n    return reduced.map(function (s) {\n      if (s._linear) {\n        return s.offset(t)[0];\n      }\n      return s.scale(t);\n    });\n  }\n\n  /**\n   * @returns {boolean} whether this curve is \"simple\"\n   */\n  simple () {\n    if (this.order === 3) {\n      var a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n      var a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n      if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;\n    }\n\n    const n1 = this.normal(0);\n    const n2 = this.normal(1);\n\n    let s = n1.x * n2.x + n1.y * n2.y;\n    if (this._3d) {\n      s += n1.z * n2.z;\n    }\n\n    const angle = abs(acos(s));\n\n    return angle < pi / 3;\n  }\n\n  reduce () {\n    var i;\n    var t1 = 0;\n    var t2 = 0;\n    var step = 0.01;\n    var segment;\n    var pass1 = [];\n    var pass2 = [];\n    // first pass: split on extrema\n    var extrema = this.extrema().values;\n    if (extrema.indexOf(0) === -1) {\n      extrema = [0].concat(extrema);\n    }\n    if (extrema.indexOf(1) === -1) {\n      extrema.push(1);\n    }\n\n    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n      t2 = extrema[i];\n      segment = this.split(t1, t2);\n      segment._t1 = t1;\n      segment._t2 = t2;\n      pass1.push(segment);\n      t1 = t2;\n    }\n\n    // second pass: further reduce these segments to simple segments\n    pass1.forEach(function (p1) {\n      t1 = 0;\n      t2 = 0;\n      while (t2 <= 1) {\n        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n          segment = p1.split(t1, t2);\n          if (!segment.simple()) {\n            t2 -= step;\n            if (abs(t1 - t2) < step) {\n              // we can never form a reduction\n              return [];\n            }\n            segment = p1.split(t1, t2);\n            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n            pass2.push(segment);\n            t1 = t2;\n            break;\n          }\n        }\n      }\n      if (t1 < 1) {\n        segment = p1.split(t1, 1);\n        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n        segment._t2 = p1._t2;\n        pass2.push(segment);\n      }\n    });\n    return pass2;\n  }\n\n  scale (d) {\n    var order = this.order;\n    var distanceFn = false;\n    if (typeof d === 'function') {\n      distanceFn = d;\n    }\n    if (distanceFn && order === 2) {\n      return this.raise().scale(distanceFn);\n    }\n\n    // TODO: add special handling for degenerate (=linear) curves.\n    var clockwise = this.clockwise;\n    var r1 = distanceFn ? distanceFn(0) : d;\n    var r2 = distanceFn ? distanceFn(1) : d;\n    var v = [this.offset(0, 10), this.offset(1, 10)];\n    var o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n    if (!o) {\n      throw new Error('cannot scale this curve. Try reducing it first.');\n    }\n    // move all points by distance 'd' wrt the origin 'o'\n    var points = this.points;\n    var np = [];\n\n    // move end points by fixed distance along normal.\n    [0, 1].forEach(\n      function (t) {\n        var p = (np[t * order] = utils.copy(points[t * order]));\n        p.x += (t ? r2 : r1) * v[t].n.x;\n        p.y += (t ? r2 : r1) * v[t].n.y;\n      }\n    );\n\n    if (!distanceFn) {\n      // move control points to lie on the intersection of the offset\n      // derivative vector, and the origin-through-control vector\n      [0, 1].forEach(\n        function (t) {\n          if (this.order === 2 && !!t) return;\n          var p = np[t * order];\n          var d = this.derivative(t);\n          var p2 = { x: p.x + d.x, y: p.y + d.y };\n          np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n        }.bind(this)\n      );\n      return new Bezier(np);\n    }\n\n    // move control points by \"however much necessary to\n    // ensure the correct tangent to endpoint\".\n    [0, 1].forEach(\n      function (t) {\n        if (this.order === 2 && !!t) return;\n        var p = points[t + 1];\n        var ov = {\n          x: p.x - o.x,\n          y: p.y - o.y\n        };\n        var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n        if (distanceFn && !clockwise) rc = -rc;\n        var m = sqrt(ov.x * ov.x + ov.y * ov.y);\n        ov.x /= m;\n        ov.y /= m;\n        np[t + 1] = {\n          x: p.x + rc * ov.x,\n          y: p.y + rc * ov.y\n        };\n      }.bind(this)\n    );\n\n    return new Bezier(np);\n  }\n\n  outline (d1, d2, d3, d4) {\n    d2 = typeof d2 === 'undefined' ? d1 : d2;\n    var reduced = this.reduce();\n    var len = reduced.length;\n    var fcurves = [];\n    var bcurves = [];\n    var p;\n    var alen = 0;\n    var tlen = this.length();\n\n    var graduated = typeof d3 !== 'undefined' && typeof d4 !== 'undefined';\n\n    function linearDistanceFunction (s, e, tlen, alen, slen) {\n      return function (v) {\n        var f1 = alen / tlen;\n        var f2 = (alen + slen) / tlen;\n        var d = e - s;\n        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n      };\n    }\n\n    // form curve oulines\n    reduced.forEach(function (segment) {\n      slen = segment.length();\n      if (graduated) {\n        fcurves.push(\n          segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))\n        );\n        bcurves.push(\n          segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))\n        );\n      } else {\n        fcurves.push(segment.scale(d1));\n        bcurves.push(segment.scale(-d2));\n      }\n      alen += slen;\n    });\n\n    // reverse the \"return\" outline\n    bcurves = bcurves\n      .map(function (s) {\n        p = s.points;\n        if (p[3]) {\n          s.points = [p[3], p[2], p[1], p[0]];\n        } else {\n          s.points = [p[2], p[1], p[0]];\n        }\n        return s;\n      })\n      .reverse();\n\n    // form the endcaps as lines\n    var fs = fcurves[0].points[0];\n    var fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1];\n    var bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1];\n    var be = bcurves[0].points[0];\n    var ls = utils.makeline(bs, fs);\n    var le = utils.makeline(fe, be);\n    var segments = [ls]\n      .concat(fcurves)\n      .concat([le])\n      .concat(bcurves);\n    var slen = segments.length;\n\n    return new PolyBezier(segments);\n  }\n\n  /**\n   * @private\n   */\n  outlineshapes (d1, d2, curveIntersectionThreshold) {\n    d2 = d2 || d1;\n    var outline = this.outline(d1, d2).curves;\n    var shapes = [];\n    for (var i = 1, len = outline.length; i < len / 2; i++) {\n      var shape = utils.makeshape(\n        outline[i],\n        outline[len - i],\n        curveIntersectionThreshold\n      );\n      shape.startcap.virtual = i > 1;\n      shape.endcap.virtual = i < len / 2 - 1;\n      shapes.push(shape);\n    }\n    return shapes;\n  }\n\n  /**\n   *\n   * @param {Bezier}[curve=this]\n   * @param {number} curveIntersectionThreshold\n   */\n  intersects (curve, curveIntersectionThreshold) {\n    if (!curve) return this.selfintersects(curveIntersectionThreshold);\n    if (curve.p1 && curve.p2) {\n      return this.lineIntersects(curve);\n    }\n    if (curve instanceof Bezier) {\n      curve = curve.reduce();\n    }\n\n    return this.curveintersects(\n      this.reduce(),\n      curve,\n      curveIntersectionThreshold\n    );\n  }\n\n  lineIntersects (line) {\n    var mx = min(line.p1.x, line.p2.x);\n    var my = min(line.p1.y, line.p2.y);\n    var MX = max(line.p1.x, line.p2.x);\n    var MY = max(line.p1.y, line.p2.y);\n    var self = this;\n    return utils.roots(this.points, line).filter(function (t) {\n      var p = self.get(t);\n      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n    });\n  }\n\n  selfintersects (curveIntersectionThreshold) {\n    var reduced = this.reduce();\n    // \"simple\" curves cannot intersect with their direct\n    // neighbour, so for each segment X we check whether\n    // it intersects [0:x-2][x+2:last].\n    var i;\n    var len = reduced.length - 2;\n    var results = [];\n    var result;\n    var left;\n    var right;\n    for (i = 0; i < len; i++) {\n      left = reduced.slice(i, i + 1);\n      right = reduced.slice(i + 2);\n      result = this.curveintersects(left, right, curveIntersectionThreshold);\n      results = results.concat(result);\n    }\n    return results;\n  }\n\n  curveintersects (c1, c2, curveIntersectionThreshold) {\n    var pairs = [];\n    // step 1: pair off any overlapping segments\n    c1.forEach(function (l) {\n      c2.forEach(function (r) {\n        if (l.overlaps(r)) {\n          pairs.push({ left: l, right: r });\n        }\n      });\n    });\n    // step 2: for each pairing, run through the convergence algorithm.\n    var intersections = [];\n    pairs.forEach(function (pair) {\n      var result = utils.pairiteration(\n        pair.left,\n        pair.right,\n        curveIntersectionThreshold\n      );\n      if (result.length > 0) {\n        intersections = intersections.concat(result);\n      }\n    });\n    return intersections;\n  }\n\n  arcs (errorThreshold) {\n    errorThreshold = errorThreshold || 0.5;\n    var circles = [];\n    return this._iterate(errorThreshold, circles);\n  }\n\n  /**\n   * @private\n   */\n  _error (pc, np1, s, e) {\n    var q = (e - s) / 4;\n    var c1 = this.get(s + q);\n    var c2 = this.get(e - q);\n    var ref = utils.dist(pc, np1);\n    var d1 = utils.dist(pc, c1);\n    var d2 = utils.dist(pc, c2);\n    return abs(d1 - ref) + abs(d2 - ref);\n  }\n\n  _iterate (errorThreshold, circles) {\n    /* eslint-disable camelcase */\n    var t_s = 0;\n    var t_e = 1;\n    var safety;\n    // we do a binary search to find the \"good `t` closest to no-longer-good\"\n    do {\n      safety = 0;\n\n      // step 1: start with the maximum possible arc\n      t_e = 1;\n\n      // points:\n      var np1 = this.get(t_s);\n      var np2;\n      var np3;\n      var arc;\n      var prev_arc;\n\n      // booleans:\n      var curr_good = false;\n      var prev_good = false;\n      var done;\n\n      // numbers:\n      var t_m = t_e;\n      var prev_e = 1;\n\n      // step 2: find the best possible arc\n      do {\n        prev_good = curr_good;\n        prev_arc = arc;\n        t_m = (t_s + t_e) / 2;\n\n        np2 = this.get(t_m);\n        np3 = this.get(t_e);\n\n        arc = utils.getccenter(np1, np2, np3);\n\n        // also save the t values\n        arc.interval = {\n          start: t_s,\n          end: t_e\n        };\n\n        var error = this._error(arc, np1, t_s, t_e);\n        curr_good = error <= errorThreshold;\n\n        done = prev_good && !curr_good;\n        if (!done) prev_e = t_e;\n\n        // this arc is fine: we can move 'e' up to see if we can find a wider arc\n        if (curr_good) {\n          // if e is already at max, then we're done for this arc.\n          if (t_e >= 1) {\n            // make sure we cap at t=1\n            arc.interval.end = prev_e = 1;\n            prev_arc = arc;\n            // if we capped the arc segment to t=1 we also need to make sure that\n            // the arc's end angle is correct with respect to the bezier end point.\n            if (t_e > 1) {\n              var d = {\n                x: arc.x + arc.r * cos(arc.e),\n                y: arc.y + arc.r * sin(arc.e)\n              };\n              arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));\n            }\n            break;\n          }\n          // if not, move it up by half the iteration distance\n          t_e = t_e + (t_e - t_s) / 2;\n        } else {\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          t_e = t_m;\n        }\n      } while (!done && safety++ < 100);\n\n      if (safety >= 100) {\n        break;\n      }\n\n      // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n      prev_arc = prev_arc || arc;\n      circles.push(prev_arc);\n      t_s = prev_e;\n    } while (t_e < 1);\n\n    /* eslint-enable camelcase */\n    return circles;\n  }\n\n  getUtils () {\n    return utils;\n  }\n\n  valueOf () {\n    return this.toString();\n  }\n\n  /**\n   * @returns a string representation of this bezier\n   */\n  toString () {\n    return utils.pointsToString(this.points);\n  }\n\n  /**\n   * @returns {string | boolean} - SVG string to draw this curve; {@code false} is returned for curves\n   *  in 3-space because they are not supported.\n   */\n  toSVG () {\n    if (this._3d) {\n      return false;\n    }\n\n    var p = this.points;\n    var x = p[0].x;\n    var y = p[0].y;\n    var s = ['M', x, y, this.order === 2 ? 'Q' : 'C'];\n\n    for (let i = 1, last = p.length; i < last; i++) {\n      s.push(p[i].x);\n      s.push(p[i].y);\n    }\n\n    return s.join(' ');\n  }\n\n  /**\n   * @private\n   */\n  verify () {\n    const print = this.coordDigest();\n\n    if (print !== this._print) {\n      this._print = print;\n      this.update();\n    }\n  }\n\n  /**\n   * @private\n   */\n  coordDigest () {\n    return this.points\n      .map((controlPoint, i) => '' + i + controlPoint.x + controlPoint.y + (controlPoint.z || 0))\n      .join('');\n  }\n\n  /**\n   * This should be invoked whenever data has been modified. It will invalidate any caches (including the\n   * lookup tables) and does some recalculations.\n   *\n   * @private\n   * @param {} newprint - unused parameter?\n   */\n  update (newprint) {\n    // invalidate any precomputed LUT\n    this._lut = [];\n    this.dpoints = utils.derive(this.points, this._3d);\n    this.computedirection();\n  }\n\n  computedirection () {\n    const points = this.points;\n    const angle = utils.angle(points[0], points[this.order], points[1]);\n\n    this.clockwise = angle > 0;\n  }\n\n  /**\n   * turn an svg <path> d attribute into a sequence of Bezier segments.\n   */\n  static SVGtoBeziers (d) {\n    return svgToBeziers(Bezier, d);\n  }\n\n  static quadraticFromPoints (p1, p2, p3, t) {\n    if (typeof t === 'undefined') {\n      t = 0.5;\n    }\n    // shortcuts, although they're really dumb\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    }\n    // real fitting.\n    var abc = getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  }\n\n  static cubicFromPoints (S, B, E, t, d1) {\n    if (typeof t === 'undefined') {\n      t = 0.5;\n    }\n    var abc = getABC(3, S, B, E, t);\n    if (typeof d1 === 'undefined') {\n      d1 = utils.dist(B, abc.C);\n    }\n    var d2 = d1 * (1 - t) / t;\n\n    var selen = utils.dist(S, E);\n    var lx = (E.x - S.x) / selen;\n    var ly = (E.y - S.y) / selen;\n    var bx1 = d1 * lx;\n    var by1 = d1 * ly;\n    var bx2 = d2 * lx;\n    var by2 = d2 * ly;\n    // derivation of new hull coordinates\n    var e1 = { x: B.x - bx1, y: B.y - by1 };\n    var e2 = { x: B.x + bx2, y: B.y + by2 };\n    var A = abc.A;\n    var v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) };\n    var v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t };\n    var nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t };\n    var nc2 = {\n      x: E.x + (v2.x - E.x) / (1 - t),\n      y: E.y + (v2.y - E.y) / (1 - t)\n    };\n    // ...done\n    return new Bezier(S, nc1, nc2, E);\n  };\n\n  static getUtils () {\n    return utils;\n  }\n\n  static PolyBezier = PolyBezier;\n}\n"],"names":["abs","Math","cos","sin","acos","atan2","sqrt","pow","crt","v","pi","PI","tau","quart","epsilon","nMax","Number","MAX_SAFE_INTEGER","nMin","MIN_SAFE_INTEGER","ZERO","x","y","z","utils","Tvalues","Cvalues","arcfn","t","derivativeFn","d","l","compute","points","_3d","order","length","p","mt","ret","mt2","t2","a","b","c","dCpts","JSON","parse","stringify","i","splice","computeWithRatios","ratios","r","f1","f2","f3","f4","derive","dpoints","list","Array","j","dpt","push","between","m","M","approximately","precision","sum","len","map","ds","de","ts","te","d1","d2","v2","lerp","v1","pointToString","s","pointsToString","join","copy","obj","angle","o","dx1","dy1","dx2","dy2","cross","dot","round","pos","indexOf","parseFloat","substring","dist","p1","p2","dx","dy","closest","LUT","point","mdist","mpos","forEach","idx","abcratio","n","bottom","top","projectionratio","lli8","x1","y1","x2","y2","x3","y3","x4","y4","nx","ny","lli4","p3","p4","lli","makeline","Bezier","findbbox","sections","mx","my","MX","MY","bbox","min","max","mid","size","shapeintersections","s1","bbox1","s2","bbox2","curveIntersectionThreshold","bboxoverlap","intersections","a1","startcap","forward","back","endcap","a2","l1","virtual","l2","iss","intersects","c1","c2","makeshape","bpl","fpl","start","end","shape","self","getminmax","curve","concat","get","align","line","tx","ty","roots","reduce","m1","m2","filter","pa","pb","pc","pd","q","q2","discriminant","u1","mp3","mp33","cosphi","phi","crtr","t1","sd","droots","curvature","kOnly","num","dnm","adk","dk","k","dd","qdsum","pk","nk","inflections","slice","v3","trm","sq","b1","b2","dims","dim","expandbox","_bbox","pairiteration","c1b","c2b","threshold","_t1","_t2","cc1","split","cc2","pairs","left","right","pair","results","getccenter","dx1p","dy1p","dx2p","dy2p","mx1","my1","mx2","my2","mx1n","my1n","mx2n","my2n","arc","e","_","numberSort","PolyBezier","curves","toString","offset","normalisePath","replace","instructions","instructionLength","instruction","op","lop","args","alen","sx","sy","cx","cy","cx2","cy2","normalized","toLowerCase","trim","makeBezier","term","values","cvalues","PreboundConstructor","bind","apply","last","convertPath","terms","normalise","matcher","RegExp","segment","segments","ARGS","C","Q","L","test","VECTOR3_COMPONENTS","getABC","S","B","E","u","um","A","coords","call","arguments","coordlen","newargs","higher","Error","step","dimlen","_linear","update","_lut","steps","verify","error","lut","getLUT","hits","ft","np","pim","derivative","__normal3","__normal2","r1","r2","q1","R","_p","pt","hull","result","span","subsplit","mfn","sort","extrema","lbbox","tbbox","normal","nv","reduced","scale","n1","n2","pass1","pass2","simple","distanceFn","raise","clockwise","ov","rc","d3","d4","fcurves","bcurves","tlen","graduated","linearDistanceFunction","slen","reverse","fs","fe","bs","be","ls","le","outline","shapes","selfintersects","lineIntersects","curveintersects","overlaps","errorThreshold","circles","_iterate","np1","ref","t_s","t_e","safety","np2","np3","prev_arc","curr_good","prev_good","done","t_m","prev_e","interval","_error","print","coordDigest","_print","controlPoint","newprint","computedirection","svgToBeziers","abc","selen","lx","ly","bx1","by1","bx2","by2","e1","e2","nc1","nc2"],"mappings":"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"}